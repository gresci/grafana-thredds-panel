{"version":3,"sources":["../src/thredds.js"],"names":["moment","mapboxgl","d3","Thredds","ctrl","mapContainer","console","log","createMap","frames","currentFrameIndex","animation","mapCenterLonLat","parseFloat","panel","mapCenterLongitude","mapCenterLatitude","accessToken","mbApiKey","map","Map","container","style","mapStyle","center","zoom","initialZoom","interactive","userInteractionEnabled","legend","data","needToRedrawFrames","stopAnimation","clearFrames","createFrames","startAnimation","forEach","item","getLayer","removeLayer","dataCharacteristics","timeValues","thredds","loaded","createFramesSafely","attemptsLeft","interval","setInterval","clearInterval","time","frameName","wmsUrl","url","parameter","scale_min","scale_max","getSource","addSource","type","tiles","width","height","push","slider","select","id","attr","length","stepFrame","goToIndex","oldFrame","newFrame","newLayer","source","paint","addLayer","text","format","property","resize","panTo","mapCenterMoved","zoomFactor","setZoom","parseInt","remove"],"mappings":"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","file":"thredds.js","sourcesContent":["/* eslint-disable id-length, no-unused-vars */\nimport moment from 'moment';\nimport mapboxgl from './libs/mapbox-gl';\nimport * as d3 from './libs/d3';\n/* eslint-disable id-length, no-unused-vars */\n\nexport default class Thredds {\n    constructor(ctrl, mapContainer) {\n        console.log('NEW constructor')\n        this.ctrl = ctrl;\n        this.mapContainer = mapContainer;\n        this.createMap();\n        this.frames = []; // list of timestamps\n        this.currentFrameIndex = 0;\n        this.animation = {};\n    }\n\n    createMap() {\n        console.log('rebuilding map');\n        const mapCenterLonLat = [parseFloat(this.ctrl.panel.mapCenterLongitude), parseFloat(this.ctrl.panel.mapCenterLatitude)];\n        mapboxgl.accessToken = this.ctrl.panel.mbApiKey;\n        this.map = new mapboxgl.Map({\n            container: this.mapContainer,\n            style: 'mapbox://styles/mapbox/' + this.ctrl.panel.mapStyle,\n            center: mapCenterLonLat,\n            zoom: parseFloat(this.ctrl.panel.initialZoom),\n            interactive: this.ctrl.panel.userInteractionEnabled\n        });\n    }\n\n    createLegend() {\n        this.legend = {};\n    }\n\n    needToRedrawFrames() {\n        this.legend = {};\n        return true;\n    }\n\n    drawLayerFrames() {\n        const data = this.ctrl.data;\n        if (this.needToRedrawFrames(data)) {\n            console.log('needToRedrawFrames')\n            this.stopAnimation();\n            this.clearFrames();\n            this.createFrames(data);\n            this.startAnimation();\n        }\n    }\n\n    clearFrames() {\n        this.frames.forEach((item) => {\n            if (this.map.getLayer('f-' + item))\n                this.map.removeLayer('f-' + item);\n        });\n        this.frames = [];\n    }\n\n    createFrames() {\n        console.log('createFrames')\n        if (!this.ctrl.dataCharacteristics.timeValues) {\n            console.log('no series to display');\n            return;\n        }\n\n        if (!this.ctrl.thredds) {\n            console.log('no thredds data');\n            return;\n        }\n\n        if (this.map.loaded()) {\n            this.createFramesSafely();\n        } else {\n            console.log('no geo source in map. maybe not loaded?');\n            // this is stupid to use setInterval.\n            // but mapbox doesn't seem to have a on-source-loaded event that reliably works\n            // for this purpose.\n            let attemptsLeft = 10;\n            const interval = setInterval(() => {\n                console.log('waited for layer to load.');\n                if (this.map.loaded()) {\n                    this.createFramesSafely();\n                    clearInterval(interval);\n                } else {\n                    console.log('still no geo source. try refresh manually?');\n                    if (--attemptsLeft <= 0) {\n                        clearInterval(interval);\n                    }\n                }\n            }, 500);\n        }\n    }\n\n    createFramesSafely() {\n        console.log('createFramesSafely')\n\n        this.ctrl.dataCharacteristics.timeValues.forEach((time) => {\n            // console.log(time)\n            console.log(this.ctrl.panel.thredds)\n            const frameName = 'f-' + time;\n            // const wmsUrl = `${this.ctrl.panel.thredds.url}?LAYERS=${this.ctrl.panel.thredds.parameter}&ELEVATION=0&TIME=${time}&TRANSPARENT=true&STYLES=boxfill/rainbow&COLORSCALERANGE=${this.ctrl.panel.thredds.scale_min},${this.ctrl.panel.thredds.scale_max}&NUMCOLORBANDS=20&LOGSCALE=false&SERVICE=WMS&VERSION=1.1.1&REQUEST=GetMap&FORMAT=image/png&SRS=EPSG:3857&BBOX={bbox-epsg-3857}&WIDTH=256&HEIGHT=256`;\n            // const wmsUrl = `${this.ctrl.panel.thredds.url}?LAYERS=${this.ctrl.panel.thredds.parameter}&ELEVATION=0&TIME=${time}&TRANSPARENT=true&STYLES=boxfill/rainbow&COLORSCALERANGE=-1,10&NUMCOLORBANDS=20&LOGSCALE=false&SERVICE=WMS&VERSION=1.1.1&REQUEST=GetMap&FORMAT=image/png&SRS=EPSG:3857&BBOX={bbox-epsg-3857}&WIDTH=256&HEIGHT=256`;\n            // const wmsUrl = `${this.ctrl.panel.thredds.url}?LAYERS=${this.ctrl.panel.thredds.parameter}&ELEVATION=0&TIME=${time}&TRANSPARENT=true&STYLES=boxfill/rainbow&COLORSCALERANGE=-1,10&NUMCOLORBANDS=20&LOGSCALE=false&SERVICE=WMS&VERSION=1.3.0&REQUEST=GetMap&FORMAT=image/png&CRS=EPSG:3857&BBOX={bbox-epsg-3857}&WIDTH=256&HEIGHT=256`;\n            const wmsUrl = `${this.ctrl.panel.thredds.url}?LAYERS=${this.ctrl.panel.thredds.parameter}&ELEVATION=0&TIME=${time}&TRANSPARENT=true&STYLES=boxfill%2Fsst_36&COLORSCALERANGE=${this.ctrl.panel.thredds.scale_min},${this.ctrl.panel.thredds.scale_max}&NUMCOLORBANDS=80&LOGSCALE=false&SERVICE=WMS&VERSION=1.1.1&REQUEST=GetMap&FORMAT=image%2Fpng&SRS=EPSG%3A3857&BBOX={bbox-epsg-3857}&WIDTH=256&HEIGHT=256`;\n            console.log('wmsUrl', wmsUrl);\n            if (this.map) {\n                if (!this.map.getSource('f-' + time))\n                    this.map.addSource('f-' + time, {\n                        type: 'raster',\n                        tiles: [wmsUrl],\n                        width: 256,\n                        height: 256\n                    });\n                // const newLayer = {\n                //     id: 'f-' + time,\n                //     type: 'raster',\n                //     source: 'f-' + time,\n                //     paint: {\n                //         \"raster-opacity\": 0,\n                //     },\n                // }\n                // this.map.addLayer(newLayer);\n            }\n\n            this.frames.push(time);\n        });\n\n        // get slider component, set min/max/value\n        const slider = d3.select('#map_' + this.ctrl.panel.id + '_slider')\n            .attr('min', 0)\n            .attr('max', this.frames.length);\n    }\n\n\n    startAnimation() {\n        if (this.animation) {\n            this.stopAnimation();\n        }\n\n        this.animation = setInterval(() => {\n            this.stepFrame();\n        }, 3000);\n    }\n\n    stopAnimation() {\n        clearInterval(this.animation);\n        this.animation = null;\n    }\n\n    pauseAnimation() {\n        clearInterval(this.animation);\n        // this.animation = null;\n    }\n\n    stepFrame(goToIndex) {\n        console.log('stepFrame', this.frames.length, this.currentFrameIndex)\n        if (!this.map) {\n            return;\n        }\n        if (this.frames.length === 0) {\n            // console.log('skipping animation: no frames');\n            return;\n        }\n        const oldFrame = 'f-' + this.frames[this.currentFrameIndex];\n\n        if(!goToIndex && goToIndex !== 0) {\n            this.currentFrameIndex += 1;\n        } else {\n            this.currentFrameIndex = goToIndex;\n        }\n        if (this.currentFrameIndex >= this.frames.length) {\n            this.currentFrameIndex = 0;\n        }\n        const newFrame = 'f-' + this.frames[this.currentFrameIndex];\n\n        console.log(newFrame, oldFrame)\n        if(this.map.getLayer(oldFrame)) {\n            this.map.removeLayer(oldFrame);\n        }\n        const newLayer = {\n            id: newFrame,\n            type: 'raster',\n            source: newFrame,\n            paint: {\n                \"raster-opacity\": 1,\n            },\n        }\n        this.map.addLayer(newLayer);\n        // this.map.setPaintProperty(newFrame, 'raster-opacity', 1);\n        // this.map.setPaintProperty(oldFrame, 'raster-opacity', 0);\n\n        // set time string in legend\n        d3.select('#map_' + this.ctrl.panel.id + '_date').text(moment(this.frames[this.currentFrameIndex]).format('DD-MM-YYYY HH:mm'));\n        // set slider position to indicate time-location\n        d3.select('#map_' + this.ctrl.panel.id + '_slider').property('value', this.currentFrameIndex);\n    }\n\n    resize() {\n        this.map.resize();\n    }\n\n    panToMapCenter() {\n        this.map.panTo([parseFloat(this.ctrl.panel.mapCenterLongitude), parseFloat(this.ctrl.panel.mapCenterLatitude)]);\n        this.ctrl.mapCenterMoved = false;\n    }\n\n    setZoom(zoomFactor) {\n        this.map.setZoom(parseInt(zoomFactor, 10));\n    }\n\n    remove() {\n        if (this.map) {\n            this.map.remove();\n        }\n        this.map = null;\n    }\n}\n"]}